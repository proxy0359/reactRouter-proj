{"version":3,"file":"static/js/118.8300b5eb.chunk.js","mappings":"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","sources":["webpack://router-project/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://router-project/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__BQSE4\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__B00x-\",\"loading\":\"QuoteForm_loading__lHe5b\",\"control\":\"QuoteForm_control__7k5vV\",\"actions\":\"QuoteForm_actions__+gC1o\",\"success\":\"QuoteForm_success__NOWZo\",\"error\":\"QuoteForm_error__AipN2\"};","import { useRef, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { sendComment } from \"../util/api\";\n\nimport { useParams } from \"react-router-dom\";\n\nlet sentMessage = false;\n\nconst QuoteForm = (props) => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [textInput, setTextInput] = useState(\"\");\n  const [authIsTouched, setAuthorIsTouched] = useState(false);\n  const [textIsTouched, setTextIsTouched] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [authorError, setAuthorError] = useState(false);\n  const [textError, setTextError] = useState(false);\n  const [sentMessage, setSentMessage] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formFocus, setFormFocus] = useState(false);\n  const param = useParams();\n\n  const authorIsValid = authorInput.trim().length !== 0;\n\n  const textIsValid = textInput.trim().length !== 0;\n  const formIsValid = textIsValid && authorIsValid;\n\n  const authorInputHandler = (event) => {\n    setAuthorInput(event.target.value);\n  };\n\n  const textInputHandler = (event) => {\n    setTextInput(event.target.value);\n  };\n\n  const authBlurHandler = () => {\n    setAuthorIsTouched(true);\n    setSentMessage(false);\n    if (authorIsValid) setAuthorError(false);\n    else setAuthorError(true);\n  };\n\n  const textBlurHandler = () => {\n    setTextIsTouched(true);\n    setSentMessage(false);\n    if (textIsValid) setTextError(false);\n    else setTextError(true);\n  };\n\n  // what a bummer ,   router 6.7 dosn't support usePrompt (gawa nalang custom hook wag kang tamad)\n\n  const formFocusHandler = () => {\n    setFormFocus(true);\n  };\n\n  const doneEditingHandler = () => {\n    setFormFocus(false);\n  };\n\n  // Submit Handler\n\n  async function submitFormHandler(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    if (!authorIsValid) {\n      setAuthorError(true);\n\n      setIsLoading(false);\n    }\n    if (!textIsValid) {\n      setTextError(true);\n      setIsLoading(false);\n    }\n    if (!formIsValid) {\n      return;\n    }\n\n    // optional: Could validate here\n    try {\n      await sendComment({\n        id: Date.now().toString(36) + Math.random().toString(36).substr(2),\n        author: authorInput,\n        text: textInput,\n      });\n    } catch (err) {\n      return err;\n    }\n    setIsError(false);\n\n    setTextInput(\"\");\n    setAuthorInput(\"\");\n    setSentMessage(true);\n\n    setAuthorIsTouched(false);\n    setTextIsTouched(false);\n    setIsLoading(false);\n\n    setAuthorError(false);\n    setTextError(false);\n  }\n\n  let errorText;\n  if (authorError && textError) {\n    errorText = \"Please enter a valid input\";\n  } else if (authorError) {\n    errorText = \"Invalid Author\";\n  } else if (textError) {\n    errorText = \"Invalid Text\";\n  }\n\n  return (\n    <Card>\n      <form\n        className={classes.form}\n        onSubmit={submitFormHandler}\n        onFocus={formFocusHandler}\n      >\n        {sentMessage && (\n          <p className={classes.success} align=\"center\">\n            Quotes has been sent\n          </p>\n        )}\n        {errorText && (\n          <p className={classes.error} align=\"center\">\n            {errorText}\n          </p>\n        )}\n\n        {isLoading ? (\n          <LoadingSpinner />\n        ) : (\n          <>\n            <div className={classes.control}>\n              <label htmlFor=\"author\">Author</label>\n              <input\n                type=\"text\"\n                id=\"author\"\n                onChange={authorInputHandler}\n                onBlur={authBlurHandler}\n                value={authorInput}\n              />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"text\">Text</label>\n              <textarea\n                id=\"text\"\n                rows=\"5\"\n                onChange={textInputHandler}\n                onBlur={textBlurHandler}\n                value={textInput}\n              ></textarea>\n            </div>\n\n            <div className={classes.actions}>\n              <button className=\"btn\" onClick={doneEditingHandler}>\n                Add Quote\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n"],"names":["props","className","classes","children","errorText","useState","authorInput","setAuthorInput","textInput","setTextInput","setAuthorIsTouched","setTextIsTouched","setIsError","authorError","setAuthorError","textError","setTextError","sentMessage","setSentMessage","isLoading","setIsLoading","setFormFocus","authorIsValid","useParams","trim","length","textIsValid","formIsValid","event","preventDefault","sendComment","id","Date","now","toString","Math","random","substr","author","text","onSubmit","onFocus","align","LoadingSpinner","htmlFor","type","onChange","target","value","onBlur","rows","onClick"],"sourceRoot":""}